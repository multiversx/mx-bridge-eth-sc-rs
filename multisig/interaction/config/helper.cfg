CONFIG_FILE=$SCRIPTPATH/config/configs.cfg
function confirmation {
  FUNC="$1"
  echo -e 
  read -p "Do you want to go on with ${GREEN}"${FUNC}"${NC} (Default No) ? (Yy/Nn)" yn
  echo -e
  
  case $yn in
      [Yy]* )
      
      echo -e "${GREEN}Proceeding with "${FUNC}"!${NC}"
      ${FUNC}
        ;;
      [Nn]* )
      echo -e "${GREEN}Exiting...${NC}"
        ;;
            
      * )
      echo -e "${GREEN}I'll take that as a no then... ${NC}"
        ;;
  esac
}

function confirmation-with-skip {
  FUNC="$1"
  echo -e 
  read -p "Do you want to go on with "${FUNC}" (Default No) ? (Yy/Nn)" yn
  echo -e
  
  case $yn in
      [Yy]* )
      
      echo -e "${GREEN}Proceeding with "${FUNC}"!${NC}"
      ${FUNC}
        ;;
      [Nn]* )
        ;;
            
      * )
      echo -e "${GREEN}I'll take that as a no then... ${NC}"
        ;;
  esac
}

function continue-confirmation {
  FUNC="$1"
  echo -e 
  read -p "Enter any key to continue with "${FUNC}"" yn
  echo -e
  
  ${FUNC}
}

function manual-update-config-file {
  source $SCRIPTPATH/config/configs.cfg
}

function confirmation-multiple {
  DISPLAY_STR=""
  for var in "$@"
  do
    DISPLAY_STR="${DISPLAY_STR} & ${var}"
  done

  echo -e
  read -p "Do you want to go on with ${GREEN}${DISPLAY_STR}${NC} (Default No) ? (Yy/Nn)" yn
  echo -e

  case $yn in
      [Yy]* )

      echo -e "${GREEN}Proceeding with ${DISPLAY_STR}!${NC}"
      for var in "$@"
        do
          confirmation ${var}
        done

        ;;
      [Nn]* )
      echo -e "${GREEN}Exiting...${NC}"
        ;;

      * )
      echo -e "${GREEN}I'll take that as a no then... ${NC}"
        ;;
  esac
}

function update-config {
  TARGET_KEY=$1
  REPLACEMENT_VALUE=$2
  sed "s/^$TARGET_KEY=.*/$TARGET_KEY=$REPLACEMENT_VALUE/" $CONFIG_FILE > $SCRIPTPATH/config/temp.x
  mv $SCRIPTPATH/config/temp.x "$CONFIG_FILE"
  source $CONFIG_FILE
}

CHECK_VARIABLES()
{
    VARIABLE_NAMES=("$@")
    for VARIABLE_NAME in "${VARIABLE_NAMES[@]}"; do
        [ -z "${!VARIABLE_NAME}" ] && echo "$VARIABLE_NAME variable is unset." && VAR_UNSET=true
    done
    [ -n "$VAR_UNSET" ] && return 1
    return 0
}